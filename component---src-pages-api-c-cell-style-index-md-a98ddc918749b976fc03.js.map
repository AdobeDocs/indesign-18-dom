{"version":3,"file":"component---src-pages-api-c-cell-style-index-md-a98ddc918749b976fc03.js","mappings":"qTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,aAAW,cAEnBA,EAAAA,EAAAA,KAAA,2BACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,mBACEA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,eAAaH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,aAAmB,MAChEH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,MAAgB,MAC5EH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,oCAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,eAAaH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,aAAmB,MAChEH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,YAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,WAAqB,MAClFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,oEAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,eAAaH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,aAAmB,MAChEH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,UAAoB,MAC/EH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6EAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,eAAaH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,aAAmB,MAChEH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,MAC/EH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6DAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,eAAaH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,aAAmB,MAChEH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,UAAoB,MAChFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4BAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,eAAaH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,aAAmB,MAChEH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,mBAAoBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,kBAA4B,MAChGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,qCAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,oBAA8B,MACzFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,oFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,mBAA6B,MACxFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,mFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,qFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,sBAAgC,MAC3FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,sFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,4BAAsC,MACjGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,8HAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,gBAA0B,MACrFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,gFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,iBAA2B,MACtFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,iFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,mBAA6B,MACxFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,mFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,kBAA4B,MACvFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,kFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,yBAAmC,MAC9FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,2HAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,WAAqB,MAChFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4EAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,yBAAmC,MAC9FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4HAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,sBAAgC,MAC3FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,sJAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,wIAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,qLAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,YAAsB,MACjFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6IAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,aAAuB,MAClFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,+IAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,eAAyB,MACpFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,qJAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,cAAwB,MACnFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,iJAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,aAAuB,MAClFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,+JAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,YAAsB,MACjFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,sGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,iBAA2B,MACtFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,mGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,uBAAiC,MAC5FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,8GAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,wBAAkC,MAC7FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,+GAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,uBAAiC,MAC5FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,+GAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,4BAAsC,MACjGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,iFAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,0BAAoC,MAC/FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,yHAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,2BAAqC,MAChGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,kGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,0BAAoC,MAC/FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6GAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,+BAAyC,MACpGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,qGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,8BAAwC,MACnGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4MAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,6BAAuC,MAClGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,2KAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,kCAA4C,MACvGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,yKAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6MAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,uBAAiC,MAC5FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,iJAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,yBAAmC,MAC9FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4GAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,yBAAmC,MAC9FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6KAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,8BAAwC,MACnGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,qJAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,iBAA2B,MACtFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,2JAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,wBAAkC,MAC7FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,kGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,sBAAgC,MAC3FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,kHAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,uBAAiC,MAC5FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,2IAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,sBAAgC,MAC3FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,8HAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,2BAAqC,MAChGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,wGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,0BAAoC,MAC/FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,2MAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,yBAAmC,MAC9FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4LAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,8BAAwC,MACnGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,8KAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,uBAAiC,MAC5FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,iGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,iHAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,sBAAgC,MAC3FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,0IAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6HAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,0BAAoC,MAC/FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,uGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,yBAAmC,MAC9FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,yMAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,wBAAkC,MAC7FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,0LAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,6BAAuC,MAClGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,8KAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,yBAAmC,MAC9FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,mGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,uBAAiC,MAC5FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,mHAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,wBAAkC,MAC7FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,qHAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,uBAAiC,MAC5FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,+HAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,4BAAsC,MACjGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,yGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,2BAAqC,MAChGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6MAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,0BAAoC,MAC/FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,8LAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,+BAAyC,MACpGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,gLAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,0BAAoC,MAC/FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,oGAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,wBAAkC,MAC7FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,oHAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,yBAAmC,MAC9FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6IAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,wBAAkC,MAC7FH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,6GAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,6BAAuC,MAClGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,0GAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,4BAAsC,MACjGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,+MAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,2BAAqC,MAChGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,gMAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,UAAWH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,gCAA0C,MACrGH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,kLAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,QAAkB,MAC9EH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,2BAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,MAC/EH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,8CAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,cAAwB,MACpFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4EAE5BH,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAAA,mBACEA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,eAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,UAAoB,gBAAgBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,iBAA2B,OACtIH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,uBAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,aACb,GAAM,cAAY,eAEpBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,eAChBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,kBAInBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,cAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,kBAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,qEAMvBH,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,mBACEA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,cAAeH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,aAAuB,OACtFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,8BAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,cAAeH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,QAAkB,sBAAsBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,MAAgB,YAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,aAAuB,OACtMH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,+CAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,aACb,GAAM,gBAAc,eAEtBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,eAChBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,kBAInBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,oBAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,OAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,oFAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,UAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,cAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,gRAMvBH,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,mBACEA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,eAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,eAAyB,aAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,OAAiB,aAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,OACpLH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,mEAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,aACb,GAAM,gBAAc,eAEtBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,eAChBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,kBAInBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,WAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,QAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,cAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,WAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,UAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,mBAMvBH,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,mBACEA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,gBAA0B,aAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,OAAiB,OAC1IH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4DAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,aACb,GAAM,gBAAc,eAEtBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,eAChBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,kBAInBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,WAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,QAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,iBAMvBH,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,mBACEA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,YAAsB,OAClFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,sEAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,cAAeH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,eAAyB,OACxFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,2EAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,WAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,eAAyB,OACrFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,oCAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,gBACfH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,kBAAmBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,oBAA8B,aAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,aAAuB,YAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,WAAqB,cAAcH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,YAAsB,OAC5QH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,4BAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,aACb,GAAM,gBAAc,eAEtBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,eAChBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,kBAInBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,WAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,cAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,qBAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,UAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,YAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,iEAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,YAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,aAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,+CAMvBH,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,mBACEA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,YAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,uBAAiC,aAAaH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,aAAuB,YAAYH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,WAAqB,cAAcH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,YAAsB,OACzQH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,cAAY,gCAC1BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,aACb,GAAM,gBAAc,eAEtBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,eAChBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,kBAInBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,WAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,cAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,gCAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,UAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,YAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,4EAGjBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,YAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,aAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,8CAQ3B,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/api/c/CellStyle/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/indesign-18-dom/indesign-18-dom/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"cellstyle\"\n    }}>{`CellStyle`}</h1>\n    <p>{`A cell style.`}</p>\n    <h2 {...{\n      \"id\": \"instance\"\n    }}>{`Instance`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`id`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The unique ID of the CellStyle.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`isValid`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Returns true if the object specifier resolves to valid objects.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`parent`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The parent of the CellStyle (a Document, Application or CellStyleGroup).`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`index`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The index of the CellStyle within its containing object.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Events `}<strong parentName=\"p\">{`events`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A collection of events.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`EventListeners `}<strong parentName=\"p\">{`eventListeners`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A collection of event listeners.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`graphicLeftInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The left inset of the graphic cell. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`graphicTopInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The top inset of the graphic cell. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`graphicRightInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The right inset of the graphic cell. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`graphicBottomInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The bottom inset of the graphic cell. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`clipContentToGraphicCell`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, clips the graphic cell's content to width and height of the cell. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textTopInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The top inset of the text cell. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textLeftInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The left inset of the text cell. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textBottomInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The bottom inset of the text cell. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`textRightInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The right inset of the text cell. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`clipContentToTextCell`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, clips the text cell's content to width and height of the cell. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`basedOn`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The style that this style is based on. Can return: CellStyle or String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`appliedParagraphStyle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The paragraph style applied to the text. Can return: ParagraphStyle or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gradientFillLength`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The length (of a linear gradient) or radius (of a radial gradient) applied to the fill of the object. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gradientFillAngle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The angle of a linear gradient applied to the fill of the object. (Range: -180 to 180). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`gradientFillStart`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The starting point (in page coordinates) of a gradient applied to the fill of the CellStyle, in the format `}{`[x, y]`}{`. Can return: Array of 2 Units or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The top inset of the cell. The API has been deprecated. Use TextTopInset or GraphicTopInset. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The left inset of the cell.The API has been deprecated. Use TextLeftInset or GraphicLeftInset. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The bottom inset of the cell.The API has been deprecated. Use TextBottomInset or GraphicBottomInset. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The right inset of the cell.The API has been deprecated. Use TextLeftInset or GraphicRightInset. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`fillColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the fill of the object. Can return: Swatch or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`fillTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the fill of the object. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`overprintFill`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the fill of the object will overprint. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topLeftDiagonalLine`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, draws a diagonal line starting from the top left. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topRightDiagonalLine`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, draws a diagonal line starting from the top right. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineInFront`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, draws the diagonal line in front of cell contents. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The diagonal line stroke weight. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the diagonal line(s). Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The diagonal line color, specified as a swatch. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The diagonal line tint (as a percentage). (Range: 0 to 100). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the diagonal line stroke will overprint. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the gap of the diagonal line stroke. Note: Not valid when diagonal line stroke type is solid. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the diagonal line stroke gap color. Note: Not valid when diagonal line stroke type is solid. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`diagonalLineStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the stroke gap of the diagonal line will overprint. Note: Not valid when diagonal line stroke type is solid. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`clipContentToCell`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, clips the cell's content to width and height of the cell. The API has been deprecated. Use ClipContentsToTextCell or ClipContentsToPageItemCell. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`firstBaselineOffset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The distance between the baseline of the text and the top inset of the cell. Can return: FirstBaseline enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`verticalJustification`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The vertical alignment of cell. Can return: VerticalJustification enumerator or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`paragraphSpacingLimit`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The maximum space that can be added between paragraphs in a cell. Note: Valid only when vertical justification is justified. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`minimumFirstBaselineOffset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The space between the baseline of the text and the top inset of the frame or cell. Can return: Unit (0 - 8640 points) or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rotationAngle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The rotation angle (in degrees) of the cell, specified as one of the following values: 0, 90, 180, or 270. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftEdgeStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of the left edge border stroke. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftEdgeStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the left edge. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftEdgeStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the left edge border stroke. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftEdgeStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the left edge border stroke. (Range: 0 to 100). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftEdgeStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the left edge border stroke will overprint. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftEdgeStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the gap of the left edge border stroke. Note: Not valid when left edge stroke type is solid. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftEdgeStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the left edge border stroke gap color. (Range: 0 to 100) Note: Not valid when left edge stroke type is solid. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`leftEdgeStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap color of the left edge border stroke will overprint. Note: Not valid when left edge stroke type is solid. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topEdgeStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of the top edge border stroke. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topEdgeStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the top edge. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topEdgeStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the top edge border stroke. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topEdgeStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the top edge border stroke. (Range: 0 to 100). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topEdgeStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the top edge border stroke will overprint. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topEdgeStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the gap of the top edge border stroke. Note: Not valid when top edge stroke type is solid. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topEdgeStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the top edge border stroke gap color. (Range: 0 to 100) Note: Not valid when top edge stroke type is solid. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`topEdgeStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap color of the top edge border stroke will overprint. Note: Not valid when top edge stroke type is solid. . Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightEdgeStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of the right edge border stroke. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightEdgeStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the right edge. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightEdgeStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The color, specified as a swatch, of the right edge border stroke. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightEdgeStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the right edge border stroke. (Range: 0 to 100). Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightEdgeStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the right edge border stroke will overprint. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightEdgeStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the gap of the right edge border stroke. Note: Not valid when right edge stroke type is solid. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightEdgeStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the right edge border stroke gap color. (Range: 0 to 100) Note: Not valid when right edge stroke type is solid. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`rightEdgeStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap color of the right edge border stroke will overprint. Note: Not valid when right edge stroke type is solid. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomEdgeStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of the bottom edge border stroke. Can return: Unit or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomEdgeStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the bottom edge. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomEdgeStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the bottom edge border stroke. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomEdgeStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the bottom edge border stroke. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomEdgeStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the bottom edge border stroke will overprint. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomEdgeStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The swatch (color, gradient, tint, or mixed ink) applied to the gap of the bottom edge border stroke. Note: Not valid when bottom edge stroke type is solid. Can return: Swatch or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomEdgeStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the bottom edge border stroke gap color. (Range: 0 to 100) Note: Not valid when bottom edge stroke type is solid. Can return: Real or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`bottomEdgeStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap color of the bottom edge border stroke will overprint. Note: Not valid when bottom edge stroke type is solid. Can return: Boolean or NothingEnum enumerator.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`name`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The name of the style.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`label`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A property that can be set to any string.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Object `}<strong parentName=\"p\">{`properties`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A property that allows setting of several properties at the same time.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`remove`}</strong>{`( CellStyle `}<strong parentName=\"p\">{`replacingWith`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Deletes the style.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`CellStyle`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`replacingWith`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The style to apply in place of the deleted style. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`CellStyle `}<strong parentName=\"p\">{`duplicate`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Duplicates the CellStyle.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`CellStyle `}<strong parentName=\"p\">{`move`}</strong>{`( LocationOptions `}<strong parentName=\"p\">{`to`}</strong>{`, Mixed `}<strong parentName=\"p\">{`reference`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Moves the style to the specified location.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-1\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`LocationOptions`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`to`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The location relative to the reference object or within the containing object.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Mixed`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`reference`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The reference object. Note: Required when the to parameter specifies before or after. Can accept: ParagraphStyle, ParagraphStyleGroup, CharacterStyle, CharacterStyleGroup, CellStyle, CellStyleGroup, TableStyle, TableStyleGroup, Document or Application. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`insertLabel`}</strong>{`( String `}<strong parentName=\"p\">{`key`}</strong>{`, String `}<strong parentName=\"p\">{`value`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Sets the label to the value associated with the specified key.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-2\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`key`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The key.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`value`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The value.`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`extractLabel`}</strong>{`( String `}<strong parentName=\"p\">{`key`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Gets the label value associated with the specified key.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-3\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`key`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The key.`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`toSource`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Generates a string which, if executed, will return the CellStyle.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`CellStyle `}<strong parentName=\"p\">{`getElements`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Resolves the object specifier, creating an array of object references.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`toSpecifier`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Retrieves the object specifier.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`EventListener `}<strong parentName=\"p\">{`addEventListener`}</strong>{`( String `}<strong parentName=\"p\">{`eventType`}</strong>{`, Mixed `}<strong parentName=\"p\">{`handler`}</strong>{`, Boolean `}<strong parentName=\"p\">{`captures`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Adds an event listener.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-4\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`eventType`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The event type.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Mixed`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`handler`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The event handler. Can accept: File or JavaScript Function.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Boolean`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`captures`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`This parameter is obsolete. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`removeEventListener`}</strong>{`( String `}<strong parentName=\"p\">{`eventType`}</strong>{`, Mixed `}<strong parentName=\"p\">{`handler`}</strong>{`, Boolean `}<strong parentName=\"p\">{`captures`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Removes the event listener.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-5\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`eventType`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The registered event type.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Mixed`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`handler`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The registered event handler. Can accept: File or JavaScript Function.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Boolean`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`captures`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`This parameter is obsolete. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}