{"version":3,"file":"component---src-pages-api-t-table-style-index-md-603b035359c9f0f27c33.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/t/TableStyle/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/uxp-indesign-18-dom/uxp-indesign-18-dom/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"tablestyle\"\n    }}>{`TableStyle`}</h1>\n    <p>{`A table style.`}</p>\n    <h2 {...{\n      \"id\": \"instance\"\n    }}>{`Instance`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`id`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The unique ID of the TableStyle.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`isValid`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`Returns true if the object specifier resolves to valid objects.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`parent`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The parent of the TableStyle (a Document, Application or TableStyleGroup).`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`index`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The index of the TableStyle within its containing object.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`Events `}<strong parentName=\"p\">{`events`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A collection of events.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Read Only`}</em>{` `}</p>\n      <p parentName=\"blockquote\">{`EventListeners `}<strong parentName=\"p\">{`eventListeners`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A collection of event listeners.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`graphicLeftInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The left inset of the graphic cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`graphicTopInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The top inset of the graphic cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`graphicRightInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The right inset of the graphic cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`graphicBottomInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The bottom inset of the graphic cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`clipContentToGraphicCell`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, clips the graphic cell's content to width and height of the cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`textTopInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The top inset of the text cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`textLeftInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The left inset of the text cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`textBottomInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The bottom inset of the text cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`textRightInset`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The right inset of the text cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`clipContentToTextCell`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, clips the text cell's content to width and height of the cell.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`name`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The name of the TableStyle.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Mixed `}<strong parentName=\"p\">{`basedOn`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The style that this style is based on. Can return: TableStyle or String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeOrderTypes `}<strong parentName=\"p\">{`strokeOrder`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The order in which to display row and column strokes at corners.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`topBorderStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of the table's top border stroke.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeStyle `}<strong parentName=\"p\">{`topBorderStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the top border. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`topBorderStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The color, specified as a swatch (color, gradient, tint, or mixed ink), of the table's top border stroke.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`topBorderStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the table's top border stroke. (Range: 0 to 100)`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`topBorderStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the top border strokes will overprint.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`topBorderStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The gap color, specified as a swatch (color, gradient, tint, or mixed ink), of the table's top border stroke. Note: Valid only when top border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`topBorderStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the gap color of the table's top border stroke. (Range: 0 to 100) Note: Valid only when top border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`topBorderStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap of the top border stroke will overprint. Note: Valid only when top border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`leftBorderStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of the left border stroke.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeStyle `}<strong parentName=\"p\">{`leftBorderStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the left border. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`leftBorderStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The color, specified as a swatch (color, gradient, tint, or mixed ink), of the left border stroke.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`leftBorderStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the left border stroke. (Range: 0 to 100)`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`leftBorderStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the left border stroke will overprint.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`leftBorderStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The gap color, specified as a swatch (color, gradient, tint, or mixed ink), of the left border stroke. Note: Valid only when left border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`leftBorderStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the gap color of the left border stroke. (Range: 0 to 100) Note: Valid only when left border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`leftBorderStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap of the left border stroke will overprint. Note: Valid only when left border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`bottomBorderStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of the bottom border stroke.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeStyle `}<strong parentName=\"p\">{`bottomBorderStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the bottom border. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`bottomBorderStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The color, specified as a swatch (color, gradient, tint, or mixed ink), of the bottom border stroke.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`bottomBorderStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the bottom border stroke. (Range: 0 to 100)`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`bottomBorderStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the bottom border stroke will overprint.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`bottomBorderStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The gap color, specified as a swatch (color, gradient, tint, or mixed ink), of the bottom border stroke. Note: Valid only when bottom border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`bottomBorderStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the gap color of the bottom border stroke. (Range: 0 to 100) Note: Valid only when bottom border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`bottomBorderStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap of the bottom border stroke will overprint. Note: Valid only when bottom border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`rightBorderStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of the right border stroke.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeStyle `}<strong parentName=\"p\">{`rightBorderStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of the right border. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`rightBorderStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The color, specified as a swatch (color, gradient, tint, or mixed ink), of the right border stroke.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`rightBorderStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the right border stroke. (Range: 0 to 100)`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`rightBorderStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the right border stroke will overprint.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`rightBorderStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The gap color, specified as a swatch (color, gradient, tint, or mixed ink), of the right border stroke. Note: Valid only when right border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`rightBorderStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the gap color of the right border stroke. (Range: 0 to 100) Note: Valid only when right border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`rightBorderStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap color of the right border stroke will overprint. Note: Valid only when right border stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`spaceBefore`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The space above the table.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`spaceAfter`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The space below the table.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`skipFirstAlternatingStrokeRows`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of body rows at the beginning of the table in which to skip border stroke formatting. Note: Valid when start row stroke count is 1 or greater and/or end row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`skipLastAlternatingStrokeRows`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of body rows at the end of the table in which to skip border stroke formatting. Note: Valid when start row stroke count is 1 or greater and/or end row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startRowStrokeCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of rows in the first alternating row strokes group.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`startRowStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The color, specified as a swatch (color, gradient, tint, or mixed ink), of row borders in the first alternating row strokes group. Note: Valid when start row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`startRowStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of row borders in the first alternating row strokes group. Note: Valid when start row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeStyle `}<strong parentName=\"p\">{`startRowStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of rows in the first alternating strokes group. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startRowStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the borders in the first alternating row strokes group. (Range: 0 to 100) Note: Valid when start row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`startRowStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap color of the row border stroke in the first alternating row strokes group will overprint. Note: Valid when start row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`startRowStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke gap color of row borders in the first alternating row strokes group, specified as a swatch (color, gradient, tint, or mixed ink). Note: Valid when start row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startRowStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the gap color of row borders in the first alternating rows group. (Range: 0 to 100) Note: Valid when start row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`startRowStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the row borders in the first alternating row strokes group will overprint. Note: Valid when start row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endRowStrokeCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of rows in the second alternating row strokes group.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`endRowStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke color, specified as a swatch (color, gradient, tint, or mixed ink), of row borders in the second alternating row strokes group. Note: Valid when end row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`endRowStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of row borders in the second alternating row strokes group. Note: Valid when end row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeStyle `}<strong parentName=\"p\">{`endRowStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of rows in the second alternating strokes group. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endRowStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the row borders in the second alternating strokes group. (Range: 0 to 100) Note: Valid when end row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`endRowStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the rows in the second alternating rows group will overprint. Note: Valid when end row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`endRowStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The gap color, specified as a swatch (color, gradient, tint, or mixed ink), of row borders in the second alternating rows group. Note: Valid when end row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endRowStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the gap color of rows in the second alternating strokes group. (Range: 0 to 100) Note: Valid when end row stroke count is 1 or greater and end row stroke type is not solid.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`endRowStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap of the row borders in the second alternating rows group will overprint. Note: Valid when end row stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`skipFirstAlternatingStrokeColumns`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of columns on the left of the table in which to skip border stroke formatting. Note: Valid when start column stroke count is 1 or greater and/or end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`skipLastAlternatingStrokeColumns`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of columns on the right side of the table in which to skip border stroke formatting. Note: Valid when start column stroke count is 1 or greater and/or end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startColumnStrokeCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of columns in the first alternating column strokes group.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`startColumnStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke color, specified as a swatch (color, gradient, tint, or mixed ink), of column borders in the first alternating column strokes group.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`startColumnStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of column borders in the first alternating column strokes group. Note: Valid when start column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeStyle `}<strong parentName=\"p\">{`startColumnStrokeType`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of columns in the first alternating strokes group. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startColumnStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of column borders in the first alternating column strokes group. (Range: 0 to 100) Note: Valid when start column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`startColumnStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the column borders in the first alternating column strokes group will overprint. Note: Valid when start column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`startColumnStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke gap color, specified as a swatch (color, gradient, tint, or mixed ink), of column borders in the first alternating column strokes group. Note: Valid when start column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startColumnStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the gap color of column borders in the first alternating column strokes group. (Range: 0 to 100) Note: Valid when start column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`startColumnStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap of the column borders in the first alternating column strokes group will overprint. Note: Valid when start column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endColumnStrokeCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of columns in the second alternating column strokes group.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`endColumnStrokeColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke color, specified as a swatch (color, gradient, tint, or mixed ink), of column borders in the second alternating column strokes group. Note: Valid when end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Measurement Unit (Number or String)=any `}<strong parentName=\"p\">{`endColumnStrokeWeight`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke weight of column borders in the second alternating column strokes group. Note: Valid when end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`StrokeStyle `}<strong parentName=\"p\">{`endColumnLineStyle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke type of columns in the second alternating strokes group. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endColumnStrokeTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of column borders in the second alternating column strokes group. (Range: 0 to 100) Note: Valid when end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`endColumnStrokeOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the column borders in the second alternating column strokes group will overprint. Note: Valid when end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`endColumnStrokeGapColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The stroke gap color, specified as a swatch (color, gradient, tint, or mixed ink), of column borders in the second alternating column strokes group. Note: Valid when end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endColumnStrokeGapTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the gap color of column borders in the second alternating column strokes group. (Range: 0 to 100) Note: Valid when end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`endColumnStrokeGapOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the gap of the column border stroke in the second alternating column strokes group will overprint. Note: Valid when end column stroke count is 1 or greater.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`columnFillsPriority`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, hides alternating row fills. If false, hides alternating column fills.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`skipFirstAlternatingFillRows`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of body rows at the beginning of the table to skip before applying the row fill color. Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`skipLastAlternatingFillRows`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of body rows at the end of the table in which to not apply the row fill color. Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`startRowFillColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The fill color, specified as a swatch (color, gradient, tint, or mixed ink), of rows in the first alternating fills group. Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startRowFillCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of rows in the first alternating fills group. Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startRowFillTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the rows in the first alternating fills group. (Range: 0 to 100) Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`startRowFillOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the rows in the first alternating fills group will overprint. Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endRowFillCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of rows in the second alternating fills group. Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`endRowFillColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The fill color, specified as a swatch (color, gradient, tint, or mixed ink), of rows in the second alternating fills group. Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endRowFillTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the rows in the second alternating fills group. (Range: 0 to 100) Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`endRowFillOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the rows in the second alternating fills group will overprint. Note: Valid when alternating fills are defined for table rows.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`skipFirstAlternatingFillColumns`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of columns on the left side of the table to skip before applying the column fill color. Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`skipLastAlternatingFillColumns`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number columns on the right side of the table in which to not apply the column fill color. Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startColumnFillCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of columns in the first alternating fills group. Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`startColumnFillColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The fill color, specified as a swatch (color, gradient, tint, or mixed ink), of columns in the first alternating fills group. Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`startColumnFillTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the columns in the first alternating fills group. (Range: 0 to 100) Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`startColumnFillOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the columns in the first alternating fills group will overprint. Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endColumnFillCount`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The number of columns in the second alternating fills group. Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Swatch `}<strong parentName=\"p\">{`endColumnFillColor`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The fill color, specified as a swatch (color, gradient, tint, or mixed ink), of columns in the second alternating fill group. Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Number `}<strong parentName=\"p\">{`endColumnFillTint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The tint (as a percentage) of the columns in the second alternating fills group. (Range: 0 to 100) Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`endColumnFillOverprint`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, the columns in the second alternating fills group will overprint. Note: Valid when alternating fills are defined for table columns.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`headerRegionSameAsBodyRegion`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, use the cell style of the body region for the header region.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`footerRegionSameAsBodyRegion`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, uses the cell style of the body region for the footer region.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`leftColumnRegionSameAsBodyRegion`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, uses the cell style of the body region for the left column region.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`rightColumnRegionSameAsBodyRegion`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`If true, uses the cell style of the body region for the right column region.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`CellStyle `}<strong parentName=\"p\">{`headerRegionCellStyle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The cell style of the header region. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`CellStyle `}<strong parentName=\"p\">{`footerRegionCellStyle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The cell style of the footer region. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`CellStyle `}<strong parentName=\"p\">{`leftColumnRegionCellStyle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The cell style of the left column region. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`CellStyle `}<strong parentName=\"p\">{`rightColumnRegionCellStyle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The cell style of the right column region. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`CellStyle `}<strong parentName=\"p\">{`bodyRegionCellStyle`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`The cell style of the body region. Can also accept: String.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`label`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A property that can be set to any string.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`Object `}<strong parentName=\"p\">{`properties`}</strong>{` `}</p>\n      <p parentName=\"blockquote\">{`A property that allows setting of several properties at the same time.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`remove`}</strong>{`( TableStyle `}<strong parentName=\"p\">{`replacingWith`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Deletes the style.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`TableStyle`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`replacingWith`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The style to apply in place of the deleted style. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`TableStyle `}<strong parentName=\"p\">{`duplicate`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Duplicates the TableStyle.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`TableStyle `}<strong parentName=\"p\">{`move`}</strong>{`( LocationOptions `}<strong parentName=\"p\">{`to`}</strong>{`, Mixed `}<strong parentName=\"p\">{`reference`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Moves the style to the specified location.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-1\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`LocationOptions`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`to`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The location relative to the reference object or within the containing object.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Mixed`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`reference`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The reference object. Note: Required when the to parameter specifies before or after. Can accept: ParagraphStyle, ParagraphStyleGroup, CharacterStyle, CharacterStyleGroup, CellStyle, CellStyleGroup, TableStyle, TableStyleGroup, Document or Application. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`insertLabel`}</strong>{`( String `}<strong parentName=\"p\">{`key`}</strong>{`, String `}<strong parentName=\"p\">{`value`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Sets the label to the value associated with the specified key.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-2\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`key`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The key.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`value`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The value.`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`extractLabel`}</strong>{`( String `}<strong parentName=\"p\">{`key`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Gets the label value associated with the specified key.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-3\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`key`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The key.`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`toSource`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Generates a string which, if executed, will return the TableStyle.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`TableStyle `}<strong parentName=\"p\">{`getElements`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Resolves the object specifier, creating an array of object references.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`String `}<strong parentName=\"p\">{`toSpecifier`}</strong>{`()`}</p>\n      <p parentName=\"blockquote\">{`Retrieves the object specifier.`}</p>\n      <hr parentName=\"blockquote\"></hr>\n      <p parentName=\"blockquote\">{`EventListener `}<strong parentName=\"p\">{`addEventListener`}</strong>{`( String `}<strong parentName=\"p\">{`eventType`}</strong>{`, Mixed `}<strong parentName=\"p\">{`handler`}</strong>{`, Boolean `}<strong parentName=\"p\">{`captures`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Adds an event listener.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-4\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`eventType`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The event type.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Mixed`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`handler`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The event handler. Can accept: File or JavaScript Function.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Boolean`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`captures`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`This parameter is obsolete. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Boolean `}<strong parentName=\"p\">{`removeEventListener`}</strong>{`( String `}<strong parentName=\"p\">{`eventType`}</strong>{`, Mixed `}<strong parentName=\"p\">{`handler`}</strong>{`, Boolean `}<strong parentName=\"p\">{`captures`}</strong>{` )`}</p>\n      <p parentName=\"blockquote\">{`Removes the event listener.`}</p>\n      <h4 parentName=\"blockquote\" {...{\n        \"id\": \"parameters-5\"\n      }}>{`Parameters`}</h4>\n      <table parentName=\"blockquote\">\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Type`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Name`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Description`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`String`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`eventType`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The registered event type.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Mixed`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`handler`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`The registered event handler. Can accept: File or JavaScript Function.`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Boolean`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`captures`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`This parameter is obsolete. (Optional)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}